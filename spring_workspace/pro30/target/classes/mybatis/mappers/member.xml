<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 지정 -->
<mapper namespace="mapper.member">
<!-- memResult라는 레코드를 저장한 객체 지정 -->
	<resultMap id="memResult" type="memberVO">
		<result property="id" column="id"/>
		<result property="pwd" column="pwd"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="joinDate" column="joinDate"/>
	</resultMap>
	<!-- 전체 회원 조회 SQL쿼리문 -->
	<!-- 컬럼의 데이터를 조회할 경우 select 태그를 이용한다. -->
	<select id="selectAllMemberList" resultMap="memResult">
		<![CDATA[
			SELECT * FROM t_member ORDER BY joinDate DESC
		]]>
	</select>
	<!-- 회원가입 SQL 쿼리문  -->
	<!-- 데이터를 추가할 경우 insert 태그를 이용한다. -->
	<insert id="insertMember" parameterType="memberVO">
	<!-- 넘길 정보를 memberVO객체로 저장하여 저장한다. -->
	<!-- #{param} 동적쿼리문에 사용된다. -->
		<![CDATA[
			INSERT INTO t_member(id,pwd,name,email) 
			VALUES(#{id},#{pwd},#{name},#{email})
		]]>
	</insert>
	<!-- 회원 정보 수정 SQL 쿼리문 -->
	<update id="updateMember" parameterType="memberVO">
	<!-- 넘길 정보를 memberVO객체로 저장하여 저장한다. -->
	<!-- 데이터를 수정할 경우 update 태그를 사용한다. -->
		<![CDATA[
			UPDATE t_member SET pwd=#{pwd},name=#{name},email=#{email} 
			WHERE 
			id=#{id}
		]]>
	</update>
	<!-- 회원 정보 삭제 SQL쿼리문 -->
	<delete id="deleteMember" parameterType="String">
	<!-- 삭제할떄 전달받는 객체는 아이디 하나이므로 String 값으로 전달 한다. -->
		<![CDATA[
			DELETE FROM t_member WHERE id= #{id}
		]]>
	</delete>
	<!-- 회원 로그인 체크 SQL쿼리문 -->
	<select id="loginById" resultType="memberVO" parameterType="memberVO">
		<!-- 두개이상의 객체값을 넘기므로 클래스나 map을 이용하여 전달한다. -->
		<![CDATA[
			SELECT * FROM t_member WHERE id=#{id} AND pwd=#{pwd}
		]]>
	</select>
</mapper>